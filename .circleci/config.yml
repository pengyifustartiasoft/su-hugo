#environment: &buildenv/
#  GOMODCACHE: /root/project/gomodcache 

version: 2.1
jobs: 
  test:
    # machine:
    #   image: ubuntu-2004:202010-01
    docker:
      - image: golang:1.18  # 使用您需要的 Go 版本的 Docker 镜像
#    parallelism: 3
    steps:
      # - run: sadfasdf
      - checkout  # 检出代码仓库
      # - setup_remote_docker:
      #     version: 20.10.14
      #     docker_layer_caching: true

      # - run: docker run -d --name redis -p 6379:6379 redis
      # - run: docker ps -a
      # - run: docker logs redis
      # - run: sudo apt update && sudo apt install net-tools
      # - run: netstat -tunlp
      # - run: watch date

#      - run:
#          name: Run Tests
#          command: go test ./bufferpool/...
      # - run: ls -l 
      # - run: go mod download -x
      # - run: go test ./parser/...
      # # - run: go test ./watcher/...
      # - run: go test ./commands/...
      # - run: go test ./config/...
      - restore_cache:
          keys:
            - v1-pkg-cache
      - run:
          go test -timeout  30m -v -cover  -run="^Test.*" -coverpkg=./... ./config/... -coverprofile=/tmp/coverage.out 2>&1 | tee /tmp/test.log
      - run: go tool cover -html=/tmp/coverage.out -o /tmp/coverage.html
      # - store_test_results:
      #     path: /tmp/coverage.out
      # - run: go list ./... | circleci tests run --command "xargs gotestsum --junitfile /tmp/junit.xml --format testname --" --split-by=timings --timings-type=name
      - run: go install github.com/jstemmer/go-junit-report/v2@latest
      # - run: go test  ./config/... 2>&1 | go-junit-report -set-exit-code=true > /tmp/go-test-report.xml
      - run: cat /tmp/test.log | go-junit-report > /tmp/go-test-report.xml
      - save_cache: 
          key: v1-pkg-cache
          paths:
            - "/go/pkg"
      - store_test_results:
          path: /tmp/
      - store_artifacts:
         path: /tmp/
         destination: coverage.html
      

#      - run: go test ./cache/...
      # - run: go test ./parser/...
      # # - run: go test ./watcher/...
      # - run: go test ./commands/...
      # - run: go test ./config/...
#      - run: go test ./hugolib/...

workflows:
  build:
    jobs:
      - test
          # filters:
          #   branches:
          #     only:
          #       - circleci  # 指定只在 main 分支上运行
